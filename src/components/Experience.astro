---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

interface Props {
  experience: CollectionEntry<"experience">;
}

const { experience} = Astro.props;

// Function to format date as MMM-YYYY
const formatDate = (dateString: string) => {
  if (!dateString) return null;
  const date = new Date(dateString);
  const month = date.toLocaleString('default', { month: 'short' });
  const year = date.getFullYear();
  return `${month} ${year}`;
};

const formattedStartDate = formatDate(experience.data.startDate);
const formattedEndDate = experience.data.endDate ? formatDate(experience.data.endDate) : 'Current';

// Render the markdown description using Astro's content collection rendering
const { Content } = await experience.render();
---

<div class="flex flex-col">
  <a href={experience.data.link} target="_blank" class="flex gap-1 items-center group"> 
    <h3 class="text-md font-semibold text-xl">{experience.data.company}</h3>
    <svg class="group-hover:-translate-y-[2px] group-hover:transition-transform" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill={experience.data.accentColor} d="m16 8.4l-8.9 8.9q-.275.275-.7.275t-.7-.275t-.275-.7t.275-.7L14.6 7H7q-.425 0-.712-.288T6 6t.288-.712T7 5h10q.425 0 .713.288T18 6v10q0 .425-.288.713T17 17t-.712-.288T16 16z"/></svg>
  </a>
  <div class="flex flex-col sm:flex-row sm:gap-2 text-gray-400 text-lg">
    <h3 class="text-md">{experience.data.position}</h3>
    <span class="hidden sm:block">|</span>
    <h3 class="text-md">{formattedStartDate} - {formattedEndDate}</h3>
  </div>
</div>